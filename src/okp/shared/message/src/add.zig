/// This is the "add" message.
/// This file was generated by kickzig when you added the "add" message.
/// This file will be removed by kickzig when you remove the "add" message.
/// KICKZIG TODO: Customize the "add" message.
const std = @import("std");

// Message is the add message.
pub const Message = struct {
    _allocator: std.mem.Allocator = undefined,
    _reinits: i32 = 0,

    // KICKZIG TODO: Add your own Message fields and methods.

    pub fn deinit(self: *Message) void {
        if (self._reinits == 0) {
            return;
        }
        self._reinits -= 1;
        if (self._reinits > 0) {
            return;
        }
        self._allocator.destroy(self);
    }

    pub fn reinit(self: *Message) void {
        self._reinits += 1;
    }
};

/// init constructs a new Message.
/// KICKZIG TODO: customize this constructor if needed.
pub fn init(allocator: std.mem.Allocator) !*Message {
    var message: *Message = try allocator.create(Message);
    message._allocator = allocator;
    message._reinits = 0;
    return message;
}
