const std = @import("std");

const Framer = struct {
    a: u8,

    fn frame(self: *const Framer) void {
        std.debug.print("Framer.frame(): framer.a:{d}\n", .{self.a});
    }
};

const Screen = struct {
    framer: Framer,
    b: u8,

    fn frame(self: *const Screen) void {
        self.framer.frame();
        std.debug.print("Screen.frame(): screen.b:{d}\n", .{self.b});
    }
};

pub fn main() void {
    var screen: *const Screen = &Screen{
        .framer = Framer{.a=1,},
        .b = 2,
    };
    doit(screen);
    screen.frame();
    doitFramer(&screen.framer);
}

fn doit(screen: *const Screen) void {
    std.debug.print("doit(): screen.framer.a:{d}, screen.b:{d}\n", .{ screen.framer.a, screen.b });
}

fn doitFramer(framer: *const Framer) void {
    std.debug.print("doitFramer(): framer.a:{d}\n", .{ framer.a });
}
